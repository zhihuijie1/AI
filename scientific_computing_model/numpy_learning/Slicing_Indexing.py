import numpy as np


def test():
    # --------------------- 一维数组切片和索引的使用 ---------------------
    x = np.arange(1, 10, 2, dtype=int)
    y = x[1::2]  # x[start,end,step]
    print(x)  # [1 3 5 7 9]
    print(y)  # [3 7]

    # --------------------- 二维数组切片的使用 ---------------------
    x = np.arange(1, 17)
    y = x.reshape((4, 4))
    print(y)
    print(y[3, 1])  # 第四行第二列
    '''
    [[ 1  2  3  4]
    [ 5  6  7  8]
    [ 9 10 11 12]
    [13 14 15 16]]
    14
    '''
    print(y[:, 1])
    print(y[::2, 0])  # y[start行 : end行 : step , 第几列]
    '''
    [ 2  6 10 14]
    [1 9]
    '''
    print(y[::2, ::2])  # 行间距是2，列间距也是2
    '''
    [[ 1  3]
    [ 9 11]]
    '''
    print(y[2:4, 0:2])  # 切取特定的行与列
    '''
    [[ 9 10]
    [13 14]]
    '''

    # ---------------------  负索引的使用 ---------------------
    print(y)
    """
    [[ 1  2  3  4]
    [ 5  6  7  8]
    [ 9 10 11 12]
    [13 14 15 16]]
    """
    print("获取最后一行", y[-1])  # 获取最后一行
    # [13 14 15 16]
    print("行倒叙", y[::-1])  # 行倒叙
    '''
    [[13 14 15 16]
    [ 9 10 11 12]
    [ 5  6  7  8]
    [ 1  2  3  4]]
    '''
    print("行列都倒叙", y[::-1, ::-1])  # 行列都倒叙
    '''
    [[16 15 14 13]
    [12 11 10  9]
    [ 8  7  6  5]
    [ 4  3  2  1]]
    '''

    # ---------------------  copy实现数组的赋值 ---------------------

    x = np.arange(1, 13)
    y = x.reshape((3, 4))
    z = y[:2, :2]
    vb = z[1, 1] = 10000
    print(y)
    print(z)
    print(vb)

    """
    [[    1     2     3     4]
    [    5 10000     7     8]
    [    9    10    11    12]]
    
    [[    1     2]
    [    5 10000]]
    
    10000
    """
    a = np.copy(y)
    print(a)
    '''
    [[    1     2     3     4]
    [    5 10000     7     8]
    [    9    10    11    12]]
    '''

if __name__ == '__main__':
    test()
